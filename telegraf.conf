[global_tags]


[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  hostname = "192.168.0.249"
  omit_hostname = false

[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  token = "e09V9QUJvbxiz1c_-NZQvmgBxyjUDl1IxH3y3rV7GI8_8CU7-RrWhvc9qfn4EdpPf0pCBUZwqRbgcu4GmwocFA=="
  organization = "tcf"
  bucket = "kimono-influxdb"

[[inputs.mqtt_consumer]]
  servers = ["tcp://192.168.0.249:1883"]
  topics = [
    "kimono/2/telemetry",
    "kimono/2/mission/home_position",
    "kimono/2/mission/destinations",
    "kimono/2/mission/waypoints"
  ]
  data_format = "json"

[[inputs.mqtt_consumer]]
  servers = ["tcp://192.168.0.249:1883"]
  topics = [
    "kimono/2/mission/state",
    "kimono/2/cmd",
    "kimono/2/uas/connection_state",
    "kimono/2/uas/id",
    "kimono/2/uas/type",
    "kimono/2/users",
    #"kimono/2/payload/temperature",
    #"kimono/2/payload/temp_min",
    #"kimono/2/payload/temp_max"
  ]
  data_format = "value"  # Assuming these topics contain JSON data

#[[inputs.mqtt_consumer]]
 # servers = ["tcp://192.168.0.249:1883"]
 # topics = [
  #  "kimono/2/mission/timestamps/planned"
  #]
  #data_format = "value"  # Assuming non-JSON data is in a simple value format




[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = false

[[inputs.disk]]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]

[[inputs.mem]]

[[inputs.system]]

